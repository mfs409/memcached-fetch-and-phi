// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: string.proto

#ifndef PROTOBUF_string_2eproto__INCLUDED
#define PROTOBUF_string_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace test {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_string_2eproto();
void protobuf_AssignDesc_string_2eproto();
void protobuf_ShutdownFile_string_2eproto();

class String;

// ===================================================================

class String : public ::google::protobuf::Message {
 public:
  String();
  virtual ~String();
  
  String(const String& from);
  
  inline String& operator=(const String& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const String& default_instance();
  
  void Swap(String* other);
  
  // implements Message ----------------------------------------------
  
  String* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const String& from);
  void MergeFrom(const String& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required fixed32 data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline ::google::protobuf::uint32 data() const;
  inline void set_data(::google::protobuf::uint32 value);
  
  // repeated string str = 2;
  inline int str_size() const;
  inline void clear_str();
  static const int kStrFieldNumber = 2;
  inline const ::std::string& str(int index) const;
  inline ::std::string* mutable_str(int index);
  inline void set_str(int index, const ::std::string& value);
  inline void set_str(int index, const char* value);
  inline void set_str(int index, const char* value, size_t size);
  inline ::std::string* add_str();
  inline void add_str(const ::std::string& value);
  inline void add_str(const char* value);
  inline void add_str(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& str() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_str();
  
  // @@protoc_insertion_point(class_scope:test.String)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> str_;
  ::google::protobuf::uint32 data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_string_2eproto();
  friend void protobuf_AssignDesc_string_2eproto();
  friend void protobuf_ShutdownFile_string_2eproto();
  
  void InitAsDefaultInstance();
  static String* default_instance_;
};
// ===================================================================


// ===================================================================

// String

// required fixed32 data = 1;
inline bool String::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void String::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void String::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void String::clear_data() {
  data_ = 0u;
  clear_has_data();
}
inline ::google::protobuf::uint32 String::data() const {
  return data_;
}
inline void String::set_data(::google::protobuf::uint32 value) {
  set_has_data();
  data_ = value;
}

// repeated string str = 2;
inline int String::str_size() const {
  return str_.size();
}
inline void String::clear_str() {
  str_.Clear();
}
inline const ::std::string& String::str(int index) const {
  return str_.Get(index);
}
inline ::std::string* String::mutable_str(int index) {
  return str_.Mutable(index);
}
inline void String::set_str(int index, const ::std::string& value) {
  str_.Mutable(index)->assign(value);
}
inline void String::set_str(int index, const char* value) {
  str_.Mutable(index)->assign(value);
}
inline void String::set_str(int index, const char* value, size_t size) {
  str_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* String::add_str() {
  return str_.Add();
}
inline void String::add_str(const ::std::string& value) {
  str_.Add()->assign(value);
}
inline void String::add_str(const char* value) {
  str_.Add()->assign(value);
}
inline void String::add_str(const char* value, size_t size) {
  str_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
String::str() const {
  return str_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
String::mutable_str() {
  return &str_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace test

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_string_2eproto__INCLUDED
