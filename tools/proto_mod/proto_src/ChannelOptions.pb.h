// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChannelOptions.proto

#ifndef PROTOBUF_ChannelOptions_2eproto__INCLUDED
#define PROTOBUF_ChannelOptions_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace scheduler {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ChannelOptions_2eproto();
void protobuf_AssignDesc_ChannelOptions_2eproto();
void protobuf_ShutdownFile_ChannelOptions_2eproto();


enum ChannelOptions {
  ThisChannelOnly = 0,
  AllChannels = 1,
  HDprefSD = 2,
  SDprefHD = 3,
  SDOnly = 4,
  HDOnly = 5
};
bool ChannelOptions_IsValid(int value);
const ChannelOptions ChannelOptions_MIN = ThisChannelOnly;
const ChannelOptions ChannelOptions_MAX = HDOnly;
const int ChannelOptions_ARRAYSIZE = ChannelOptions_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChannelOptions_descriptor();
inline const ::std::string& ChannelOptions_Name(ChannelOptions value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChannelOptions_descriptor(), value);
}
inline bool ChannelOptions_Parse(
    const ::std::string& name, ChannelOptions* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChannelOptions>(
    ChannelOptions_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace scheduler

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< scheduler::ChannelOptions>() {
  return scheduler::ChannelOptions_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ChannelOptions_2eproto__INCLUDED
