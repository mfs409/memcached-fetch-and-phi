// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EpisodeOptions.proto

#ifndef PROTOBUF_EpisodeOptions_2eproto__INCLUDED
#define PROTOBUF_EpisodeOptions_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace scheduler {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_EpisodeOptions_2eproto();
void protobuf_AssignDesc_EpisodeOptions_2eproto();
void protobuf_ShutdownFile_EpisodeOptions_2eproto();


enum EpisodeOptions {
  OnlyNew = 0,
  NewAndRepeats = 1,
  AllWithDuplicates = 2
};
bool EpisodeOptions_IsValid(int value);
const EpisodeOptions EpisodeOptions_MIN = OnlyNew;
const EpisodeOptions EpisodeOptions_MAX = AllWithDuplicates;
const int EpisodeOptions_ARRAYSIZE = EpisodeOptions_MAX + 1;

const ::google::protobuf::EnumDescriptor* EpisodeOptions_descriptor();
inline const ::std::string& EpisodeOptions_Name(EpisodeOptions value) {
  return ::google::protobuf::internal::NameOfEnum(
    EpisodeOptions_descriptor(), value);
}
inline bool EpisodeOptions_Parse(
    const ::std::string& name, EpisodeOptions* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EpisodeOptions>(
    EpisodeOptions_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace scheduler

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< scheduler::EpisodeOptions>() {
  return scheduler::EpisodeOptions_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EpisodeOptions_2eproto__INCLUDED
